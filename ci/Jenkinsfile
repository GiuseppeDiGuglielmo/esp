#!/usr/bin/groovy
//@Library('sld-lib-jenkins') _

pipeline {
    agent any
    // libraries {
    //     lib 'sld-lib-jenkins'
    // }
    triggers {
      githubPush()
    }
    stages {
        stage('start') {
	    steps {
            // send build started notifications
            // sendNotifications 'STARTED'
	    notifySlack 'STARTED'
	    // slackSend (color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
	    }
        }
        stage('build') {
            steps {
                sh 'echo "Hello World"'
                sh '''
                    echo "Multiline shell steps works too"
                    ls -lah
                '''
            }
        }
        stage('deploy') {
            steps {
                retry(3) {
                    sh 'echo "execute retrying 3 times"'
                }
                timeout(time: 3, unit: 'MINUTES') {
                    retry(2) {
                        sh 'echo "execute with timeout of 3 minutes"'
                    }
                }
	        }
        }
    }

    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
	    notifySlack currentBuild.result
            // slackSend (color: "good", message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure {
            echo 'This will run only if failed'
            slackSend (color: "danger", message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
            slackSend (color: "warning", message: "UNSTABLE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}
