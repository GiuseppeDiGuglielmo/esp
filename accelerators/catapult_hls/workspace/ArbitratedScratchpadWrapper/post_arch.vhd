-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    10.5a/871028 Production Release
--  HLS Date:       Tue Apr 14 07:55:32 PDT 2020
-- 
--  Generated by:   giuseppe@fastml02
--  Generated date: Tue Jun 30 18:44:48 2020
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    ScratchpadWrapper
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;


ENTITY ScratchpadWrapper IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    req_port_01_val : IN STD_LOGIC;
    req_port_01_rdy : OUT STD_LOGIC;
    req_port_01_msg : IN STD_LOGIC_VECTOR (44 DOWNTO 0);
    resp_port_01_val : OUT STD_LOGIC;
    resp_port_01_rdy : IN STD_LOGIC;
    resp_port_01_msg : OUT STD_LOGIC_VECTOR (32 DOWNTO 0);
    req_port_02_val : IN STD_LOGIC;
    req_port_02_rdy : OUT STD_LOGIC;
    req_port_02_msg : IN STD_LOGIC_VECTOR (44 DOWNTO 0);
    resp_port_02_val : OUT STD_LOGIC;
    resp_port_02_rdy : IN STD_LOGIC;
    resp_port_02_msg : OUT STD_LOGIC_VECTOR (32 DOWNTO 0)
  );
END ScratchpadWrapper;

ARCHITECTURE v1 OF ScratchpadWrapper IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL req_wrapper_01_val : STD_LOGIC;
  SIGNAL req_wrapper_01_rdy : STD_LOGIC;
  SIGNAL req_wrapper_01_msg : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL resp_wrapper_01_val : STD_LOGIC;
  SIGNAL resp_wrapper_01_rdy : STD_LOGIC;
  SIGNAL resp_wrapper_01_msg : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL req_wrapper_02_val : STD_LOGIC;
  SIGNAL req_wrapper_02_rdy : STD_LOGIC;
  SIGNAL req_wrapper_02_msg : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL resp_wrapper_02_val : STD_LOGIC;
  SIGNAL resp_wrapper_02_rdy : STD_LOGIC;
  SIGNAL resp_wrapper_02_msg : STD_LOGIC_VECTOR (32 DOWNTO 0);

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION CONV_SL_2_1(input_val:STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result:STD_LOGIC_VECTOR(0 DOWNTO 0);
  BEGIN
    result(0):=input_val;
    RETURN result;
  END;

  FUNCTION MUX_v_2_2_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION shlb_0_1_1_2(input_val:UNSIGNED(0 DOWNTO 0);shift:UNSIGNED(0 DOWNTO 0);sign_bit:STD_LOGIC)
  RETURN UNSIGNED IS
    VARIABLE result:UNSIGNED(1 DOWNTO 0);
    VARIABLE temp:UNSIGNED(1 DOWNTO 0);
    VARIABLE sw:NATURAL RANGE 1 TO 2;
    VARIABLE sw_double:NATURAL RANGE 1 TO 4;
    VARIABLE temp_idx:INTEGER;
  BEGIN
    sw:=1;
    result:=(OTHERS=>sign_bit);
    result(0 DOWNTO 0):=input_val;
    FOR i IN 0 TO 0 LOOP
      temp:=(OTHERS=>'0');
      FOR i2 IN 1-sw DOWNTO 0 LOOP
        temp_idx:=i2+sw;
        temp(temp_idx):=result(i2);
      END LOOP;
      result:= UNSIGNED(MUX_v_2_2_2(STD_LOGIC_VECTOR(result),STD_LOGIC_VECTOR(temp),shift(i)));
      sw_double:=sw*2;
      IF (sw_double<2) THEN
        sw:=sw_double;
      ELSE
        sw:=2;
      END IF;
    END LOOP;
    RETURN result(1 DOWNTO 0);
  END;

  FUNCTION FSHL_1_1_1_1_2(input_val:UNSIGNED(0 DOWNTO 0);shift:UNSIGNED(0 DOWNTO
      0))
  RETURN UNSIGNED IS
  BEGIN
    RETURN shlb_0_1_1_2(input_val,shift,'0');
  END;

  FUNCTION MUX1HOT_v_11_3_2(input_2 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(10 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(10 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_32_3_2(input_2 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(31 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(31 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_10_2_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_11_2_2(input_0 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(10 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(10 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_32_2_2(input_0 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(31 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION minimum(arg1,arg2:INTEGER) RETURN INTEGER IS
  BEGIN
    IF(arg1<arg2)THEN
      RETURN arg1;
    ELSE
      RETURN arg2;
    END IF;
  END;

  FUNCTION maximum(arg1,arg2:INTEGER) RETURN INTEGER IS
  BEGIN
    IF(arg1>arg2)THEN
      RETURN arg1;
    ELSE
      RETURN arg2;
    END IF;
  END;

  FUNCTION READSLICE_1_3(input_val:STD_LOGIC_VECTOR(2 DOWNTO 0);index:INTEGER)
  RETURN STD_LOGIC IS
    CONSTANT min_sat_index:INTEGER:= maximum( index, 0 );
    CONSTANT sat_index:INTEGER:= minimum( min_sat_index, 2);
  BEGIN
    RETURN input_val(sat_index);
  END;

  FUNCTION MUX_v_32768_2_2(input_0 : STD_LOGIC_VECTOR(32767 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(32767 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(32767 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION shlb_0_32768_15_32768(input_val:UNSIGNED(32767 DOWNTO 0);shift:UNSIGNED(14
      DOWNTO 0);sign_bit:STD_LOGIC)
  RETURN UNSIGNED IS
    VARIABLE result:UNSIGNED(32767 DOWNTO 0);
    VARIABLE temp:UNSIGNED(32767 DOWNTO 0);
    VARIABLE sw:NATURAL RANGE 1 TO 32768;
    VARIABLE sw_double:NATURAL RANGE 1 TO 65536;
    VARIABLE temp_idx:INTEGER;
  BEGIN
    sw:=1;
    result:=(OTHERS=>sign_bit);
    result(32767 DOWNTO 0):=input_val;
    FOR i IN 0 TO 14 LOOP
      temp:=(OTHERS=>'0');
      FOR i2 IN 32767-sw DOWNTO 0 LOOP
        temp_idx:=i2+sw;
        temp(temp_idx):=result(i2);
      END LOOP;
      result:= UNSIGNED(MUX_v_32768_2_2(STD_LOGIC_VECTOR(result),STD_LOGIC_VECTOR(temp),shift(i)));
      sw_double:=sw*2;
      IF (sw_double<32768) THEN
        sw:=sw_double;
      ELSE
        sw:=32768;
      END IF;
    END LOOP;
    RETURN result(32767 DOWNTO 0);
  END;

  FUNCTION WRITESLICE_3_32768_32_1_32(target:STD_LOGIC_VECTOR(32767 DOWNTO 0);source:STD_LOGIC_VECTOR(31
      DOWNTO 0);index:INTEGER;enable:STD_LOGIC_VECTOR(0 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result:STD_LOGIC_VECTOR(32767 DOWNTO 0);
    CONSTANT target_exes:STD_LOGIC_VECTOR(32767 DOWNTO 0):=(OTHERS=>'X');
    CONSTANT source_ones:STD_LOGIC_VECTOR(31 DOWNTO 0):=(OTHERS=>'1');
    VARIABLE source_shifter:UNSIGNED(32767 DOWNTO 0);
    VARIABLE mask_shifter:UNSIGNED(32767 DOWNTO 0);
    VARIABLE shift:UNSIGNED(14 DOWNTO 0);
    VARIABLE source_enable:STD_LOGIC_VECTOR(31 DOWNTO 0);
    VARIABLE byte_enable:STD_LOGIC_VECTOR(31 DOWNTO 0);
    VARIABLE left_range:INTEGER;
    VARIABLE right_range:INTEGER;
  BEGIN
    IF index<0 OR 32736<index THEN
      RETURN target_exes;
    END IF;
    source_shifter:=(OTHERS=>'0');
    mask_shifter:=(OTHERS=>'0');
    source_enable:=(OTHERS=>'0');
    right_range:=0;
    left_range:=31;
    FOR i IN 0 TO 0 LOOP
      byte_enable:=(OTHERS=>enable(i));
      source_enable(left_range DOWNTO right_range):=byte_enable;
      right_range:=left_range+1;
      left_range:=left_range+32;
    END LOOP;
    shift:=CONV_UNSIGNED(index,15);
    source_shifter(31 DOWNTO 0):=UNSIGNED(source);
    mask_shifter(31 DOWNTO 0):=UNSIGNED(source_ones AND source_enable);
    source_shifter:=shlb_0_32768_15_32768(source_shifter,shift,'0');
    mask_shifter:=shlb_0_32768_15_32768(mask_shifter,shift,'0');
    result:=(target AND NOT STD_LOGIC_VECTOR(mask_shifter)) OR STD_LOGIC_VECTOR(source_shifter);
    RETURN result;
  END;

BEGIN
  wrapper : PROCESS
    -- Interconnect Declarations
    VARIABLE scratchpad_banks_bank_array_impl_data0_rsc : STD_LOGIC_VECTOR (32767
        DOWNTO 0);
    VARIABLE scratchpad_banks_bank_array_impl_data1_rsc : STD_LOGIC_VECTOR (32767
        DOWNTO 0);
    VARIABLE resp_wrapper_01_Push_inst_STATE : STD_LOGIC;
    VARIABLE resp_wrapper_02_Push_inst_STATE : STD_LOGIC;
    VARIABLE req_wrapper_01_PopNB_inst_STATE : STD_LOGIC;
    VARIABLE req_wrapper_02_PopNB_inst_STATE : STD_LOGIC;
    VARIABLE bundle_req_type_val_lpi_1 : STD_LOGIC;
    VARIABLE bundle_req_valids_1_lpi_1 : STD_LOGIC;
    VARIABLE bundle_req_addr_1_lpi_1 : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE bundle_req_data_1_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_else_req_from_port_01_addr_lpi_1 : STD_LOGIC_VECTOR (10 DOWNTO
        0);
    VARIABLE while_else_req_from_port_01_data_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO
        0);
    VARIABLE while_else_if_2_while_else_if_2_asn_lpi_1 : STD_LOGIC;
    VARIABLE while_else_if_2_while_else_if_2_asn_2_lpi_1 : STD_LOGIC_VECTOR (10 DOWNTO
        0);
    VARIABLE while_else_if_2_while_else_if_2_asn_4_lpi_1 : STD_LOGIC_VECTOR (31 DOWNTO
        0);
    VARIABLE while_is_request_2_lpi_1 : STD_LOGIC;
    VARIABLE bundle_resp_valids_0_lpi_1 : STD_LOGIC;
    VARIABLE bundle_resp_valids_1_lpi_1 : STD_LOGIC;
    VARIABLE bundle_req_valids_0_sva : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_arbiters_next_0_1_sva : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_arbiters_next_1_1_sva : STD_LOGIC;
    VARIABLE bundle_resp_data_0_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE bundle_resp_data_1_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE stored_req_type_val_sva : STD_LOGIC;
    VARIABLE stored_req_valid_sva : STD_LOGIC;
    VARIABLE exitL_exit_while_while_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_01_type_val_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_01_valids_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_01_addr_sva : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE while_else_req_from_port_01_data_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_else_got_req_01_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_02_type_val_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_02_valids_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_02_addr_sva : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE while_else_req_from_port_02_data_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_else_got_req_02_sva : STD_LOGIC;
    VARIABLE while_else_req_from_port_02_valids_lpi_1_dfm : STD_LOGIC;
    VARIABLE bundle_req_valids_0_sva_dfm : STD_LOGIC;
    VARIABLE bundle_req_valids_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE while_else_if_2_while_else_if_2_asn_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE while_else_if_2_while_else_if_2_asn_2_lpi_1_dfm_1 : STD_LOGIC_VECTOR
        (10 DOWNTO 0);
    VARIABLE while_else_if_2_while_else_if_2_asn_4_lpi_1_dfm_1 : STD_LOGIC_VECTOR
        (31 DOWNTO 0);
    VARIABLE bundle_req_type_val_lpi_1_dfm_2 : STD_LOGIC;
    VARIABLE bundle_req_valids_0_sva_dfm_1 : STD_LOGIC;
    VARIABLE bundle_req_valids_1_lpi_1_dfm_2 : STD_LOGIC;
    VARIABLE bundle_req_addr_1_lpi_1_dfm_1 : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE bundle_req_data_1_lpi_1_dfm_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE bundle_resp_valids_0_lpi_1_dfm : STD_LOGIC;
    VARIABLE bundle_resp_valids_1_lpi_1_dfm : STD_LOGIC;
    VARIABLE while_else_req_from_port_01_addr_lpi_1_dfm_1 : STD_LOGIC_VECTOR (10
        DOWNTO 0);
    VARIABLE while_else_req_from_port_01_data_lpi_1_dfm_1 : STD_LOGIC_VECTOR (31
        DOWNTO 0);
    VARIABLE while_is_request_2_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_compute_bank_request_for_land_1_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_compute_bank_request_for_land_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_requests_transpose_0_sva : STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_xbar_requests_transpose_1_sva : STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_unequal_tmp : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_priority_2_1_sva : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_1_operator_3_false_operator_3_false_operator_3_false_or_svs
        : STD_LOGIC;
    VARIABLE nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_1_lpi_1_dfm
        : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1 : STD_LOGIC_VECTOR
        (2 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_return_0_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
        : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_do_store_0_sva_1 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_addr_0_sva_1 : STD_LOGIC_VECTOR
        (9 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_run_1_output_data_wdata_0_sva_1 : STD_LOGIC_VECTOR
        (31 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_run_1_output_data_input_chan_0_sva_1 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_do_store_0_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_addr_0_lpi_1_dfm : STD_LOGIC_VECTOR
        (9 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_unequal_tmp_1 : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_priority_2_sva : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_operator_3_false_operator_3_false_operator_3_false_or_svs
        : STD_LOGIC;
    VARIABLE nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_lpi_1_dfm
        : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1 : STD_LOGIC_VECTOR
        (2 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_return_0_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_for_1_or_ncse_sva : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_for_2_or_ncse_sva : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
        : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_do_store_1_sva_2 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_addr_10_9_0_ncse_sva_1
        : STD_LOGIC_VECTOR (9 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_wdata_32_31_0_ncse_sva_1
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_run_1_output_data_input_chan_1_sva_2 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_do_store_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_run_1_output_data_input_chan_1_lpi_1_dfm_1 :
        STD_LOGIC;
    VARIABLE scratchpad_load_store_bank_rsp_rdata_0_sva_1 : STD_LOGIC_VECTOR (31
        DOWNTO 0);
    VARIABLE scratchpad_load_store_bank_rsp_valid_0_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_load_store_bank_rsp_rdata_1_sva_2 : STD_LOGIC_VECTOR (31
        DOWNTO 0);
    VARIABLE scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_load_store_valid_src_0_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_load_store_valid_src_1_lpi_1_dfm : STD_LOGIC;
    VARIABLE scratchpad_load_store_source_0_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE scratchpad_load_store_source_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE scratchpad_load_store_valid_src_0_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE scratchpad_load_store_valid_src_1_lpi_1_dfm_1 : STD_LOGIC;
    VARIABLE crossbar_data32_t_2U_2U_for_land_1_sva_1 : STD_LOGIC;
    VARIABLE crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm : STD_LOGIC;
    VARIABLE crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_1_sva
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE crossbar_data32_t_2U_2U_for_land_sva_1 : STD_LOGIC;
    VARIABLE crossbar_data32_t_2U_2U_for_land_lpi_1_dfm : STD_LOGIC;
    VARIABLE crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_sva
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_while_for_new_valid_1_sva : STD_LOGIC;
    VARIABLE while_while_for_land_1_lpi_1_dfm : STD_LOGIC;
    VARIABLE bundle_resp_data_0_sva_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_while_for_new_valid_sva : STD_LOGIC;
    VARIABLE while_while_for_land_lpi_1_dfm : STD_LOGIC;
    VARIABLE bundle_resp_data_1_sva_dfm : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE scratchpad_request_xbar_xbar_for_3_1_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb
        : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_and_tmp : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_and_tmp_1 : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_nor_tmp : STD_LOGIC;
    VARIABLE scratchpad_request_xbar_xbar_for_3_2_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb
        : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_and_tmp_2 : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_and_tmp_3 : STD_LOGIC;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_nor_tmp_1 : STD_LOGIC;

    VARIABLE while_else_while_else_and_nl : STD_LOGIC ;
    VARIABLE while_else_while_else_and_2_nl : STD_LOGIC ;
    VARIABLE while_else_mux_5_nl : STD_LOGIC ;
    VARIABLE while_and_nl : STD_LOGIC ;
    VARIABLE while_and_1_nl : STD_LOGIC ;
    VARIABLE while_mux_nl : STD_LOGIC ;
    VARIABLE while_else_mux_2_nl : STD_LOGIC ;
    VARIABLE while_while_and_1_nl : STD_LOGIC ;
    VARIABLE while_while_and_2_nl : STD_LOGIC ;
    VARIABLE while_while_and_3_nl : STD_LOGIC ;
    VARIABLE while_while_and_4_nl : STD_LOGIC ;
    VARIABLE while_while_and_5_nl : STD_LOGIC ;
    VARIABLE while_while_and_6_nl : STD_LOGIC ;
    VARIABLE while_for_2_or_nl : STD_LOGIC ;
    VARIABLE select_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_or_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_or_1_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_or_2_nl : STD_LOGIC ;
    VARIABLE select_0_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_or_3_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_or_4_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_or_5_nl : STD_LOGIC ;
    VARIABLE scratchpad_request_xbar_xbar_for_3_scratchpad_request_xbar_xbar_for_3_and_2_nl
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE scratchpad_load_store_for_4_if_or_nl : STD_LOGIC ;
    VARIABLE scratchpad_load_store_for_4_if_or_1_nl : STD_LOGIC ;
    VARIABLE scratchpad_load_store_for_4_if_or_4_nl : STD_LOGIC ;
    VARIABLE scratchpad_load_store_for_4_if_or_5_nl : STD_LOGIC ;
    VARIABLE crossbar_data32_t_2U_2U_for_crossbar_data32_t_2U_2U_for_and_nl : STD_LOGIC_VECTOR
        (31 DOWNTO 0);
    VARIABLE crossbar_data32_t_2U_2U_for_crossbar_data32_t_2U_2U_for_and_1_nl : STD_LOGIC_VECTOR
        (31 DOWNTO 0);
    VARIABLE while_while_for_mux_nl : STD_LOGIC ;
    VARIABLE while_while_for_mux_2_nl : STD_LOGIC ;
    VARIABLE while_while_mux_7_nl : STD_LOGIC ;
    VARIABLE while_mux_5_nl : STD_LOGIC ;
    VARIABLE while_else_mux_4_nl : STD_LOGIC ;
    VARIABLE while_while_mux_8_nl : STD_LOGIC ;
    VARIABLE while_while_and_nl : STD_LOGIC ;
    VARIABLE while_is_request_mux_48_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_mux_8_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_mux_4_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_operator_2_false_and_nl : STD_LOGIC
        ;
    VARIABLE while_is_request_mux_49_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_mux_21_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_mux_15_nl : STD_LOGIC ;
    VARIABLE Arbiter_2U_Roundrobin_pick_if_1_operator_2_false_and_1_nl : STD_LOGIC
        ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_prb : STD_LOGIC ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_prb : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb : STD_LOGIC
        ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_prb_1 : STD_LOGIC ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb_1 : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_prb_1 : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb_1 : STD_LOGIC
        ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_prb_2 : STD_LOGIC ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb_2 : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_prb_2 : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb_2 : STD_LOGIC
        ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_prb_3 : STD_LOGIC ;
    VARIABLE pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb_3 : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_prb_3 : STD_LOGIC ;
    VARIABLE pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb_3 : STD_LOGIC
        ;
    VARIABLE pserved_i_bundle_resp_valids_i_prb : STD_LOGIC ;
    VARIABLE pserved_i_bundle_resp_valids_i_ctrl_prb : STD_LOGIC ;
    VARIABLE pserved_i_bundle_resp_valids_i_prb_1 : STD_LOGIC ;
    VARIABLE pserved_i_bundle_resp_valids_i_ctrl_prb_1 : STD_LOGIC ;
  BEGIN
    wrapper_rlp : LOOP
      -- C-Step 0 of Loop 'wrapper_rlp'
      bundle_resp_valids_1_lpi_1 := '0';
      bundle_resp_valids_0_lpi_1 := '0';
      while_is_request_2_lpi_1 := '0';
      while_else_if_2_while_else_if_2_asn_4_lpi_1 := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      while_else_if_2_while_else_if_2_asn_2_lpi_1 := STD_LOGIC_VECTOR'( "00000000000");
      while_else_if_2_while_else_if_2_asn_lpi_1 := '0';
      while_else_req_from_port_01_data_lpi_1 := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      while_else_req_from_port_01_addr_lpi_1 := STD_LOGIC_VECTOR'( "00000000000");
      bundle_req_data_1_lpi_1 := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      bundle_req_addr_1_lpi_1 := STD_LOGIC_VECTOR'( "00000000000");
      bundle_req_valids_1_lpi_1 := '0';
      bundle_req_type_val_lpi_1 := '0';
      bundle_req_valids_0_sva := '0';
      scratchpad_request_xbar_arbiters_next_0_1_sva := '1';
      scratchpad_request_xbar_arbiters_next_1_1_sva := '1';
      bundle_resp_data_0_sva := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      bundle_resp_data_1_sva := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      stored_req_type_val_sva := '0';
      stored_req_valid_sva := '0';
      exitL_exit_while_while_sva := '1';
      while_0 : LOOP
        -- C-Step 0 of Loop 'while_0'
        Arbiter_2U_Roundrobin_pick_unequal_tmp_1 := '0';
        Arbiter_2U_Roundrobin_pick_unequal_tmp := '0';
        while_while_for_land_lpi_1_dfm := '0';
        crossbar_data32_t_2U_2U_for_land_lpi_1_dfm := '0';
        while_while_for_land_1_lpi_1_dfm := '0';
        crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm := '0';
        while_else_req_from_port_02_valids_lpi_1_dfm := '0';
        while_else_req_from_port_01_type_val_sva := '0';
        while_else_req_from_port_02_type_val_sva := '0';
        Arbiter_2U_Roundrobin_pick_priority_2_sva := '0';
        Arbiter_2U_Roundrobin_pick_priority_2_1_sva := '0';
        while_else_req_from_port_01_valids_sva := '0';
        bundle_resp_data_1_sva_dfm := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        while_while_for_new_valid_sva := '0';
        bundle_resp_data_0_sva_dfm := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        while_while_for_new_valid_1_sva := '0';
        crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_sva
            := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        crossbar_data32_t_2U_2U_for_land_sva_1 := '0';
        crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_1_sva
            := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        crossbar_data32_t_2U_2U_for_land_1_sva_1 := '0';
        scratchpad_load_store_bank_rsp_rdata_1_sva_2 := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        scratchpad_load_store_bank_rsp_rdata_0_sva_1 := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        scratchpad_request_xbar_run_1_output_data_input_chan_1_sva_2 := '0';
        scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_wdata_32_31_0_ncse_sva_1
            := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_addr_10_9_0_ncse_sva_1
            := STD_LOGIC_VECTOR'( "0000000000");
        scratchpad_request_xbar_run_1_output_data_do_store_1_sva_2 := '0';
        Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1 := STD_LOGIC_VECTOR'( "000");
        nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_lpi_1_dfm
            := '0';
        scratchpad_request_xbar_run_1_output_data_input_chan_0_sva_1 := '0';
        scratchpad_request_xbar_run_1_output_data_wdata_0_sva_1 := STD_LOGIC_VECTOR'(
            "00000000000000000000000000000000");
        scratchpad_request_xbar_run_1_output_data_addr_0_sva_1 := STD_LOGIC_VECTOR'(
            "0000000000");
        scratchpad_request_xbar_run_1_output_data_do_store_0_sva_1 := '0';
        Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1 := STD_LOGIC_VECTOR'(
            "000");
        nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_1_lpi_1_dfm
            := '0';
        while_else_if_2_while_else_if_2_asn_4_lpi_1_dfm_1 := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        while_else_if_2_while_else_if_2_asn_2_lpi_1_dfm_1 := STD_LOGIC_VECTOR'( "00000000000");
        while_else_if_2_while_else_if_2_asn_lpi_1_dfm_1 := '0';
        bundle_req_valids_1_lpi_1_dfm_1 := '0';
        bundle_req_valids_0_sva_dfm := '0';
        while_else_req_from_port_02_data_sva := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        while_else_req_from_port_02_addr_sva := STD_LOGIC_VECTOR'( "00000000000");
        while_else_got_req_01_sva := '0';
        while_else_req_from_port_01_data_sva := STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        while_else_req_from_port_01_addr_sva := STD_LOGIC_VECTOR'( "00000000000");
        IF ( (exitL_exit_while_while_sva) = '1' ) THEN
          WAIT UNTIL clk'EVENT AND ( clk = '1' );
          EXIT wrapper_rlp WHEN ( rst = '0' );
          -- C-Step 1 of Loop 'while_0'
          IF ( (stored_req_valid_sva) = '1' ) THEN
          ELSE
            Connections_Combinational_req_t_Connections_SYN_PORT_PopNB(req_wrapper_01_val,
                req_wrapper_01_rdy, req_wrapper_01_msg, while_else_req_from_port_01_type_val_sva,
                while_else_req_from_port_01_valids_sva, while_else_req_from_port_01_addr_sva,
                while_else_req_from_port_01_data_sva, while_else_got_req_01_sva,
                req_wrapper_01_PopNB_inst_STATE, req_wrapper_01_PopNB_inst_STATE);
            Connections_Combinational_req_t_Connections_SYN_PORT_PopNB(req_wrapper_02_val,
                req_wrapper_02_rdy, req_wrapper_02_msg, while_else_req_from_port_02_type_val_sva,
                while_else_req_from_port_02_valids_sva, while_else_req_from_port_02_addr_sva,
                while_else_req_from_port_02_data_sva, while_else_got_req_02_sva,
                req_wrapper_02_PopNB_inst_STATE, req_wrapper_02_PopNB_inst_STATE);
            while_else_req_from_port_02_valids_lpi_1_dfm := while_else_req_from_port_02_valids_sva
                AND while_else_got_req_02_sva;
          END IF;
          while_else_while_else_and_nl := while_else_req_from_port_01_valids_sva
              AND while_else_got_req_01_sva;
          bundle_req_valids_0_sva_dfm := MUX_s_1_2_2(while_else_while_else_and_nl,
              bundle_req_valids_0_sva, stored_req_valid_sva);
          while_else_while_else_and_2_nl := while_else_req_from_port_02_valids_lpi_1_dfm
              AND (NOT while_else_got_req_01_sva);
          bundle_req_valids_1_lpi_1_dfm_1 := MUX_s_1_2_2(while_else_while_else_and_2_nl,
              while_else_if_2_while_else_if_2_asn_lpi_1, stored_req_valid_sva);
          while_else_mux_5_nl := MUX_s_1_2_2(while_else_if_2_while_else_if_2_asn_lpi_1,
              while_else_req_from_port_02_valids_lpi_1_dfm, while_else_got_req_01_sva);
          while_else_if_2_while_else_if_2_asn_lpi_1_dfm_1 := MUX_s_1_2_2(while_else_mux_5_nl,
              while_else_if_2_while_else_if_2_asn_lpi_1, stored_req_valid_sva);
          while_and_nl := while_else_got_req_01_sva AND (NOT (stored_req_valid_sva));
          while_else_if_2_while_else_if_2_asn_2_lpi_1_dfm_1 := MUX_v_11_2_2(while_else_if_2_while_else_if_2_asn_2_lpi_1,
              while_else_req_from_port_02_addr_sva, while_and_nl);
          while_and_1_nl := while_else_got_req_01_sva AND (NOT (stored_req_valid_sva));
          while_else_if_2_while_else_if_2_asn_4_lpi_1_dfm_1 := MUX_v_32_2_2(while_else_if_2_while_else_if_2_asn_4_lpi_1,
              while_else_req_from_port_02_data_sva, while_and_1_nl);
        END IF;
        while_else_mux_2_nl := MUX_s_1_2_2(while_else_req_from_port_02_type_val_sva,
            while_else_req_from_port_01_type_val_sva, while_else_got_req_01_sva);
        while_mux_nl := MUX_s_1_2_2(while_else_mux_2_nl, (stored_req_type_val_sva),
            stored_req_valid_sva);
        bundle_req_type_val_lpi_1_dfm_2 := MUX_s_1_2_2(bundle_req_type_val_lpi_1,
            while_mux_nl, exitL_exit_while_while_sva);
        bundle_req_valids_0_sva_dfm_1 := MUX_s_1_2_2(bundle_req_valids_0_sva, bundle_req_valids_0_sva_dfm,
            exitL_exit_while_while_sva);
        bundle_req_valids_1_lpi_1_dfm_2 := MUX_s_1_2_2(bundle_req_valids_1_lpi_1,
            bundle_req_valids_1_lpi_1_dfm_1, exitL_exit_while_while_sva);
        while_while_and_1_nl := (NOT (stored_req_valid_sva)) AND (exitL_exit_while_while_sva);
        while_while_and_2_nl := (stored_req_valid_sva) AND (exitL_exit_while_while_sva);
        bundle_req_addr_1_lpi_1_dfm_1 := MUX1HOT_v_11_3_2(bundle_req_addr_1_lpi_1,
            while_else_req_from_port_02_addr_sva, while_else_if_2_while_else_if_2_asn_2_lpi_1,
            STD_LOGIC_VECTOR'( (NOT (exitL_exit_while_while_sva)) & while_while_and_1_nl
            & while_while_and_2_nl));
        while_while_and_3_nl := (NOT (stored_req_valid_sva)) AND (exitL_exit_while_while_sva);
        while_while_and_4_nl := (stored_req_valid_sva) AND (exitL_exit_while_while_sva);
        bundle_req_data_1_lpi_1_dfm_1 := MUX1HOT_v_32_3_2(bundle_req_data_1_lpi_1,
            while_else_req_from_port_02_data_sva, while_else_if_2_while_else_if_2_asn_4_lpi_1,
            STD_LOGIC_VECTOR'( (NOT (exitL_exit_while_while_sva)) & while_while_and_3_nl
            & while_while_and_4_nl));
        bundle_resp_valids_0_lpi_1_dfm := bundle_resp_valids_0_lpi_1 AND (NOT (exitL_exit_while_while_sva));
        bundle_resp_valids_1_lpi_1_dfm := bundle_resp_valids_1_lpi_1 AND (NOT (exitL_exit_while_while_sva));
        while_while_and_5_nl := (NOT (stored_req_valid_sva)) AND (exitL_exit_while_while_sva);
        while_else_req_from_port_01_addr_lpi_1_dfm_1 := MUX_v_11_2_2(while_else_req_from_port_01_addr_lpi_1,
            while_else_req_from_port_01_addr_sva, while_while_and_5_nl);
        while_while_and_6_nl := (NOT (stored_req_valid_sva)) AND (exitL_exit_while_while_sva);
        while_else_req_from_port_01_data_lpi_1_dfm_1 := MUX_v_32_2_2(while_else_req_from_port_01_data_lpi_1,
            while_else_req_from_port_01_data_sva, while_while_and_6_nl);
        while_for_2_or_nl := bundle_req_valids_0_sva_dfm OR bundle_req_valids_1_lpi_1_dfm_1;
        while_is_request_2_lpi_1_dfm := MUX_s_1_2_2(while_is_request_2_lpi_1, while_for_2_or_nl,
            exitL_exit_while_while_sva);
        IF ( while_is_request_2_lpi_1_dfm = '1' ) THEN
          scratchpad_compute_bank_request_for_land_1_lpi_1_dfm := bundle_req_type_val_lpi_1_dfm_2
              AND bundle_req_valids_0_sva_dfm_1;
          scratchpad_compute_bank_request_for_land_lpi_1_dfm := bundle_req_type_val_lpi_1_dfm_2
              AND bundle_req_valids_1_lpi_1_dfm_2;
          scratchpad_request_xbar_xbar_requests_transpose_0_sva := STD_LOGIC_VECTOR(FSHL_1_1_1_1_2(CONV_UNSIGNED(bundle_req_valids_0_sva_dfm_1,
              1),CONV_UNSIGNED(while_else_req_from_port_01_addr_lpi_1_dfm_1(0), 1)));
          scratchpad_request_xbar_xbar_requests_transpose_1_sva := STD_LOGIC_VECTOR(FSHL_1_1_1_1_2(CONV_UNSIGNED(bundle_req_valids_1_lpi_1_dfm_2,
              1),CONV_UNSIGNED(bundle_req_addr_1_lpi_1_dfm_1(0), 1)));
          Arbiter_2U_Roundrobin_pick_unequal_tmp := (scratchpad_request_xbar_xbar_requests_transpose_1_sva(0))
              OR (scratchpad_request_xbar_xbar_requests_transpose_0_sva(0));
          select_0 := STD_LOGIC_VECTOR'( (scratchpad_request_xbar_xbar_requests_transpose_1_sva(0))
              & (scratchpad_request_xbar_xbar_requests_transpose_0_sva(0)));
          CASE select_0 IS
            WHEN "00" =>
              -- NOP
            WHEN OTHERS =>
              Arbiter_2U_Roundrobin_pick_priority_2_1_sva := (scratchpad_request_xbar_arbiters_next_0_1_sva)
                  AND (scratchpad_request_xbar_xbar_requests_transpose_1_sva(0));
              scratchpad_request_xbar_xbar_for_3_1_operator_3_false_operator_3_false_operator_3_false_or_svs
                  := Arbiter_2U_Roundrobin_pick_priority_2_1_sva OR (scratchpad_request_xbar_xbar_requests_transpose_0_sva(0))
                  OR (scratchpad_request_xbar_xbar_requests_transpose_1_sva(0));
              IF ( scratchpad_request_xbar_xbar_for_3_1_operator_3_false_operator_3_false_operator_3_false_or_svs
                  = '1' ) THEN
                nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_1_lpi_1_dfm
                    := (scratchpad_request_xbar_xbar_requests_transpose_0_sva(0))
                    AND (NOT Arbiter_2U_Roundrobin_pick_priority_2_1_sva);
                Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1 := STD_LOGIC_VECTOR'(
                    "000");
                scratchpad_request_xbar_xbar_for_3_1_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb
                    := STD_LOGIC_VECTOR'( Arbiter_2U_Roundrobin_pick_priority_2_1_sva
                    & nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_1_lpi_1_dfm);
                Arbiter_2U_Roundrobin_pick_if_1_and_tmp := CONV_SL_1_1(scratchpad_request_xbar_xbar_for_3_1_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb=STD_LOGIC_VECTOR'("10"));
                Arbiter_2U_Roundrobin_pick_if_1_and_tmp_1 := CONV_SL_1_1(scratchpad_request_xbar_xbar_for_3_1_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb=STD_LOGIC_VECTOR'("01"));
                Arbiter_2U_Roundrobin_pick_if_1_nor_tmp := NOT(CONV_SL_1_1(scratchpad_request_xbar_xbar_for_3_1_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb/=STD_LOGIC_VECTOR'("00")));
                Arbiter_2U_Roundrobin_pick_if_1_or_nl := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1,
                    2)) OR Arbiter_2U_Roundrobin_pick_if_1_and_tmp;
                Arbiter_2U_Roundrobin_pick_if_1_or_1_nl := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1,
                    1)) OR Arbiter_2U_Roundrobin_pick_if_1_and_tmp_1;
                Arbiter_2U_Roundrobin_pick_if_1_or_2_nl := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1,
                    0)) OR Arbiter_2U_Roundrobin_pick_if_1_nor_tmp;
                Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1 := STD_LOGIC_VECTOR'(
                    (Arbiter_2U_Roundrobin_pick_if_1_or_nl & Arbiter_2U_Roundrobin_pick_if_1_or_1_nl
                    & Arbiter_2U_Roundrobin_pick_if_1_or_2_nl));
              END IF;
          END CASE;
          Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1 := ((READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1,
              2)) OR (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1,
              0))) AND scratchpad_request_xbar_xbar_for_3_1_operator_3_false_operator_3_false_operator_3_false_or_svs
              AND Arbiter_2U_Roundrobin_pick_unequal_tmp;
          Arbiter_2U_Roundrobin_pick_return_0_1_lpi_1_dfm_1 := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_1_sva_1,
              1)) AND scratchpad_request_xbar_xbar_for_3_1_operator_3_false_operator_3_false_operator_3_false_or_svs
              AND Arbiter_2U_Roundrobin_pick_unequal_tmp;
          scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
              := Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1 OR Arbiter_2U_Roundrobin_pick_return_0_1_lpi_1_dfm_1;
          IF ( scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
              = '1' ) THEN
            scratchpad_request_xbar_run_1_output_data_do_store_0_sva_1 := MUX_s_1_2_2(scratchpad_compute_bank_request_for_land_1_lpi_1_dfm,
                scratchpad_compute_bank_request_for_land_lpi_1_dfm, Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1);
            scratchpad_request_xbar_run_1_output_data_addr_0_sva_1 := MUX_v_10_2_2((while_else_req_from_port_01_addr_lpi_1_dfm_1(10
                DOWNTO 1)), (bundle_req_addr_1_lpi_1_dfm_1(10 DOWNTO 1)), Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1);
            scratchpad_request_xbar_run_1_output_data_wdata_0_sva_1 := MUX_v_32_2_2(while_else_req_from_port_01_data_lpi_1_dfm_1,
                bundle_req_data_1_lpi_1_dfm_1, Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1);
            scratchpad_request_xbar_run_1_output_data_input_chan_0_sva_1 := Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1;
          END IF;
          scratchpad_request_xbar_run_1_output_data_do_store_0_lpi_1_dfm := scratchpad_request_xbar_run_1_output_data_do_store_0_sva_1
              AND scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva;
          scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm := scratchpad_request_xbar_run_1_output_data_input_chan_0_sva_1
              AND scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva;
          Arbiter_2U_Roundrobin_pick_unequal_tmp_1 := (scratchpad_request_xbar_xbar_requests_transpose_1_sva(1))
              OR (scratchpad_request_xbar_xbar_requests_transpose_0_sva(1));
          select_0_1 := STD_LOGIC_VECTOR'( (scratchpad_request_xbar_xbar_requests_transpose_1_sva(1))
              & (scratchpad_request_xbar_xbar_requests_transpose_0_sva(1)));
          CASE select_0_1 IS
            WHEN "00" =>
              -- NOP
            WHEN OTHERS =>
              Arbiter_2U_Roundrobin_pick_priority_2_sva := (scratchpad_request_xbar_arbiters_next_1_1_sva)
                  AND (scratchpad_request_xbar_xbar_requests_transpose_1_sva(1));
              scratchpad_request_xbar_xbar_for_3_2_operator_3_false_operator_3_false_operator_3_false_or_svs
                  := Arbiter_2U_Roundrobin_pick_priority_2_sva OR (scratchpad_request_xbar_xbar_requests_transpose_0_sva(1))
                  OR (scratchpad_request_xbar_xbar_requests_transpose_1_sva(1));
              IF ( scratchpad_request_xbar_xbar_for_3_2_operator_3_false_operator_3_false_operator_3_false_or_svs
                  = '1' ) THEN
                nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_lpi_1_dfm
                    := (scratchpad_request_xbar_xbar_requests_transpose_0_sva(1))
                    AND (NOT Arbiter_2U_Roundrobin_pick_priority_2_sva);
                Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1 := STD_LOGIC_VECTOR'(
                    "000");
                scratchpad_request_xbar_xbar_for_3_2_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb
                    := STD_LOGIC_VECTOR'( Arbiter_2U_Roundrobin_pick_priority_2_sva
                    & nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_lpi_1_dfm);
                Arbiter_2U_Roundrobin_pick_if_1_and_tmp_2 := CONV_SL_1_1(scratchpad_request_xbar_xbar_for_3_2_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb=STD_LOGIC_VECTOR'("10"));
                Arbiter_2U_Roundrobin_pick_if_1_and_tmp_3 := CONV_SL_1_1(scratchpad_request_xbar_xbar_for_3_2_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb=STD_LOGIC_VECTOR'("01"));
                Arbiter_2U_Roundrobin_pick_if_1_nor_tmp_1 := NOT(CONV_SL_1_1(scratchpad_request_xbar_xbar_for_3_2_Arbiter_2U_Roundrobin_pick_first_one_idx_conc_decb/=STD_LOGIC_VECTOR'("00")));
                Arbiter_2U_Roundrobin_pick_if_1_or_3_nl := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1,
                    2)) OR Arbiter_2U_Roundrobin_pick_if_1_and_tmp_2;
                Arbiter_2U_Roundrobin_pick_if_1_or_4_nl := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1,
                    1)) OR Arbiter_2U_Roundrobin_pick_if_1_and_tmp_3;
                Arbiter_2U_Roundrobin_pick_if_1_or_5_nl := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1,
                    0)) OR Arbiter_2U_Roundrobin_pick_if_1_nor_tmp_1;
                Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1 := STD_LOGIC_VECTOR'(
                    (Arbiter_2U_Roundrobin_pick_if_1_or_3_nl & Arbiter_2U_Roundrobin_pick_if_1_or_4_nl
                    & Arbiter_2U_Roundrobin_pick_if_1_or_5_nl));
              END IF;
          END CASE;
          Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1 := ((READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1,
              2)) OR (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1,
              0))) AND scratchpad_request_xbar_xbar_for_3_2_operator_3_false_operator_3_false_operator_3_false_or_svs
              AND Arbiter_2U_Roundrobin_pick_unequal_tmp_1;
          Arbiter_2U_Roundrobin_pick_return_0_lpi_1_dfm_1 := (READSLICE_1_3(Arbiter_2U_Roundrobin_pick_unrolled_choice_sva_1,
              1)) AND scratchpad_request_xbar_xbar_for_3_2_operator_3_false_operator_3_false_operator_3_false_or_svs
              AND Arbiter_2U_Roundrobin_pick_unequal_tmp_1;
          scratchpad_request_xbar_xbar_for_3_2_for_1_or_ncse_sva := Arbiter_2U_Roundrobin_pick_return_0_1_lpi_1_dfm_1
              OR Arbiter_2U_Roundrobin_pick_return_0_lpi_1_dfm_1;
          scratchpad_request_xbar_xbar_for_3_2_for_2_or_ncse_sva := Arbiter_2U_Roundrobin_pick_return_1_1_lpi_1_dfm_1
              OR Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1;
          scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
              := Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1 OR Arbiter_2U_Roundrobin_pick_return_0_lpi_1_dfm_1;
          IF ( scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
              = '1' ) THEN
            scratchpad_request_xbar_run_1_output_data_do_store_1_sva_2 := MUX_s_1_2_2(scratchpad_compute_bank_request_for_land_1_lpi_1_dfm,
                scratchpad_compute_bank_request_for_land_lpi_1_dfm, Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1);
            scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_addr_10_9_0_ncse_sva_1
                := MUX_v_10_2_2((while_else_req_from_port_01_addr_lpi_1_dfm_1(10
                DOWNTO 1)), (bundle_req_addr_1_lpi_1_dfm_1(10 DOWNTO 1)), Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1);
            scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_wdata_32_31_0_ncse_sva_1
                := MUX_v_32_2_2(while_else_req_from_port_01_data_lpi_1_dfm_1, bundle_req_data_1_lpi_1_dfm_1,
                Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1);
            scratchpad_request_xbar_run_1_output_data_input_chan_1_sva_2 := Arbiter_2U_Roundrobin_pick_return_1_lpi_1_dfm_1;
          END IF;
          scratchpad_request_xbar_run_1_output_data_do_store_1_lpi_1_dfm_1 := scratchpad_request_xbar_run_1_output_data_do_store_1_sva_2
              AND scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva;
          scratchpad_request_xbar_run_1_output_data_input_chan_1_lpi_1_dfm_1 := scratchpad_request_xbar_run_1_output_data_input_chan_1_sva_2
              AND scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva;
          IF ( scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
              = '1' ) THEN
            scratchpad_request_xbar_run_1_output_data_addr_0_lpi_1_dfm := MUX_v_10_2_2(STD_LOGIC_VECTOR'("0000000000"),
                scratchpad_request_xbar_run_1_output_data_addr_0_sva_1, scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva);
            IF ( scratchpad_request_xbar_run_1_output_data_do_store_0_lpi_1_dfm =
                '1' ) THEN
              pbank_sel_NumBanks_bank_index_out_of_bounds_prb_1 := '1';
              pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb_1 := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_prb_1 := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb_1 := '1';
              scratchpad_request_xbar_xbar_for_3_scratchpad_request_xbar_xbar_for_3_and_2_nl
                  := MUX_v_32_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000"),
                  scratchpad_request_xbar_run_1_output_data_wdata_0_sva_1, scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva);
              scratchpad_banks_bank_array_impl_data0_rsc := WRITESLICE_3_32768_32_1_32(scratchpad_banks_bank_array_impl_data0_rsc,
                  scratchpad_request_xbar_xbar_for_3_scratchpad_request_xbar_xbar_for_3_and_2_nl,
                  32*CONV_integer(UNSIGNED(scratchpad_request_xbar_run_1_output_data_addr_0_lpi_1_dfm)),
                  CONV_SL_2_1('1'));
            ELSE
              pbank_sel_NumBanks_bank_index_out_of_bounds_prb := '1';
              pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_prb := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb := '1';
              scratchpad_load_store_bank_rsp_rdata_0_sva_1 := scratchpad_banks_bank_array_impl_data0_rsc(31+32*CONV_integer(UNSIGNED(scratchpad_request_xbar_run_1_output_data_addr_0_lpi_1_dfm))
                  DOWNTO 32*CONV_integer(UNSIGNED(scratchpad_request_xbar_run_1_output_data_addr_0_lpi_1_dfm)));
            END IF;
          END IF;
          scratchpad_load_store_bank_rsp_valid_0_lpi_1_dfm := NOT(scratchpad_request_xbar_run_1_output_data_do_store_0_lpi_1_dfm
              OR (NOT scratchpad_request_xbar_xbar_for_3_1_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva));
          IF ( scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva
              = '1' ) THEN
            IF ( scratchpad_request_xbar_run_1_output_data_do_store_1_lpi_1_dfm_1
                = '1' ) THEN
              pbank_sel_NumBanks_bank_index_out_of_bounds_prb_3 := '1';
              pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb_3 := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_prb_3 := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb_3 := '1';
              scratchpad_banks_bank_array_impl_data1_rsc := WRITESLICE_3_32768_32_1_32(scratchpad_banks_bank_array_impl_data1_rsc,
                  scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_wdata_32_31_0_ncse_sva_1,
                  32*CONV_integer(UNSIGNED(scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_addr_10_9_0_ncse_sva_1)),
                  CONV_SL_2_1('1'));
            ELSE
              pbank_sel_NumBanks_bank_index_out_of_bounds_prb_2 := '1';
              pbank_sel_NumBanks_bank_index_out_of_bounds_ctrl_prb_2 := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_prb_2 := '1';
              pidx_NumEntriesPerBank_local_index_out_of_bounds_ctrl_prb_2 := '1';
              scratchpad_load_store_bank_rsp_rdata_1_sva_2 := scratchpad_banks_bank_array_impl_data1_rsc(31+32*CONV_integer(UNSIGNED(scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_addr_10_9_0_ncse_sva_1))
                  DOWNTO 32*CONV_integer(UNSIGNED(scratchpad_request_xbar_xbar_for_3_2_if_1_slc_scratchpad_request_xbar_run_1_input_data_data_addr_10_9_0_ncse_sva_1)));
            END IF;
          END IF;
          scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm := NOT(scratchpad_request_xbar_run_1_output_data_do_store_1_lpi_1_dfm_1
              OR (NOT scratchpad_request_xbar_xbar_for_3_2_scratchpad_request_xbar_xbar_for_3_if_1_operator_2_false_1_or_mdf_sva));
          scratchpad_load_store_valid_src_0_lpi_1_dfm := NOT(scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm
              OR (NOT scratchpad_load_store_bank_rsp_valid_0_lpi_1_dfm));
          scratchpad_load_store_valid_src_1_lpi_1_dfm := scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm
              AND scratchpad_load_store_bank_rsp_valid_0_lpi_1_dfm;
          scratchpad_load_store_for_4_if_or_nl := scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm
              OR (NOT scratchpad_request_xbar_run_1_output_data_input_chan_1_lpi_1_dfm_1);
          scratchpad_load_store_source_0_lpi_1_dfm_1 := MUX_s_1_2_2(scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm,
              scratchpad_load_store_for_4_if_or_nl, scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm);
          scratchpad_load_store_for_4_if_or_1_nl := (NOT scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm)
              OR scratchpad_request_xbar_run_1_output_data_input_chan_1_lpi_1_dfm_1;
          scratchpad_load_store_source_1_lpi_1_dfm_1 := MUX_s_1_2_2((NOT scratchpad_request_xbar_run_1_output_data_input_chan_0_lpi_1_dfm),
              scratchpad_load_store_for_4_if_or_1_nl, scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm);
          scratchpad_load_store_for_4_if_or_4_nl := scratchpad_load_store_valid_src_0_lpi_1_dfm
              OR (NOT scratchpad_request_xbar_run_1_output_data_input_chan_1_lpi_1_dfm_1);
          scratchpad_load_store_valid_src_0_lpi_1_dfm_1 := MUX_s_1_2_2(scratchpad_load_store_valid_src_0_lpi_1_dfm,
              scratchpad_load_store_for_4_if_or_4_nl, scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm);
          scratchpad_load_store_for_4_if_or_5_nl := scratchpad_load_store_valid_src_1_lpi_1_dfm
              OR scratchpad_request_xbar_run_1_output_data_input_chan_1_lpi_1_dfm_1;
          scratchpad_load_store_valid_src_1_lpi_1_dfm_1 := MUX_s_1_2_2(scratchpad_load_store_valid_src_1_lpi_1_dfm,
              scratchpad_load_store_for_4_if_or_5_nl, scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm);
          IF ( scratchpad_load_store_valid_src_0_lpi_1_dfm_1 = '1' ) THEN
            crossbar_data32_t_2U_2U_for_land_1_sva_1 := MUX_s_1_2_2(scratchpad_load_store_bank_rsp_valid_0_lpi_1_dfm,
                scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm, scratchpad_load_store_source_0_lpi_1_dfm_1);
          END IF;
          crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm := crossbar_data32_t_2U_2U_for_land_1_sva_1
              AND scratchpad_load_store_valid_src_0_lpi_1_dfm_1;
          IF ( crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm = '1' ) THEN
            crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_1_sva
                := MUX_v_32_2_2(scratchpad_load_store_bank_rsp_rdata_0_sva_1, scratchpad_load_store_bank_rsp_rdata_1_sva_2,
                scratchpad_load_store_source_0_lpi_1_dfm_1);
          END IF;
          IF ( scratchpad_load_store_valid_src_1_lpi_1_dfm_1 = '1' ) THEN
            crossbar_data32_t_2U_2U_for_land_sva_1 := MUX_s_1_2_2(scratchpad_load_store_bank_rsp_valid_0_lpi_1_dfm,
                scratchpad_load_store_bank_rsp_valid_1_lpi_1_dfm, scratchpad_load_store_source_1_lpi_1_dfm_1);
          END IF;
          crossbar_data32_t_2U_2U_for_land_lpi_1_dfm := crossbar_data32_t_2U_2U_for_land_sva_1
              AND scratchpad_load_store_valid_src_1_lpi_1_dfm_1;
          IF ( crossbar_data32_t_2U_2U_for_land_lpi_1_dfm = '1' ) THEN
            crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_sva
                := MUX_v_32_2_2(scratchpad_load_store_bank_rsp_rdata_0_sva_1, scratchpad_load_store_bank_rsp_rdata_1_sva_2,
                scratchpad_load_store_source_1_lpi_1_dfm_1);
          END IF;
          while_while_for_new_valid_1_sva := bundle_req_valids_0_sva_dfm_1 XOR scratchpad_request_xbar_xbar_for_3_2_for_1_or_ncse_sva;
          while_while_for_land_1_lpi_1_dfm := scratchpad_request_xbar_xbar_for_3_2_for_1_or_ncse_sva
              AND (NOT bundle_req_type_val_lpi_1_dfm_2);
          IF ( while_while_for_land_1_lpi_1_dfm = '1' ) THEN
            pserved_i_bundle_resp_valids_i_prb := crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm;
            pserved_i_bundle_resp_valids_i_ctrl_prb := '1';
          END IF;
          crossbar_data32_t_2U_2U_for_crossbar_data32_t_2U_2U_for_and_nl := MUX_v_32_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000"),
              crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_1_sva,
              crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm);
          bundle_resp_data_0_sva_dfm := MUX_v_32_2_2(bundle_resp_data_0_sva, crossbar_data32_t_2U_2U_for_crossbar_data32_t_2U_2U_for_and_nl,
              while_while_for_land_1_lpi_1_dfm);
          while_while_for_new_valid_sva := bundle_req_valids_1_lpi_1_dfm_2 XOR scratchpad_request_xbar_xbar_for_3_2_for_2_or_ncse_sva;
          while_while_for_land_lpi_1_dfm := scratchpad_request_xbar_xbar_for_3_2_for_2_or_ncse_sva
              AND (NOT bundle_req_type_val_lpi_1_dfm_2);
          IF ( while_while_for_land_lpi_1_dfm = '1' ) THEN
            pserved_i_bundle_resp_valids_i_prb_1 := crossbar_data32_t_2U_2U_for_land_lpi_1_dfm;
            pserved_i_bundle_resp_valids_i_ctrl_prb_1 := '1';
          END IF;
          crossbar_data32_t_2U_2U_for_crossbar_data32_t_2U_2U_for_and_1_nl := MUX_v_32_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000"),
              crossbar_data32_t_2U_2U_for_slc_scratchpad_load_store_data_in_32_31_0_pmx_sva,
              crossbar_data32_t_2U_2U_for_land_lpi_1_dfm);
          bundle_resp_data_1_sva_dfm := MUX_v_32_2_2(bundle_resp_data_1_sva, crossbar_data32_t_2U_2U_for_crossbar_data32_t_2U_2U_for_and_1_nl,
              while_while_for_land_lpi_1_dfm);
        ELSE
          IF ( (bundle_resp_valids_0_lpi_1_dfm AND (NOT bundle_req_type_val_lpi_1_dfm_2))
              = '1' ) THEN
            Connections_Combinational_rsp_t_Connections_SYN_PORT_Push(resp_wrapper_01_val,
                resp_wrapper_01_rdy, resp_wrapper_01_msg, bundle_resp_valids_0_lpi_1_dfm,
                bundle_resp_data_0_sva, resp_wrapper_01_Push_inst_STATE, resp_wrapper_01_Push_inst_STATE);
          END IF;
          IF ( (bundle_resp_valids_1_lpi_1_dfm AND (NOT bundle_req_type_val_lpi_1_dfm_2))
              = '1' ) THEN
            Connections_Combinational_rsp_t_Connections_SYN_PORT_Push(resp_wrapper_02_val,
                resp_wrapper_02_rdy, resp_wrapper_02_msg, bundle_resp_valids_1_lpi_1_dfm,
                bundle_resp_data_1_sva, resp_wrapper_02_Push_inst_STATE, resp_wrapper_02_Push_inst_STATE);
          END IF;
        END IF;
        bundle_req_type_val_lpi_1 := bundle_req_type_val_lpi_1_dfm_2;
        bundle_req_valids_0_sva := MUX_s_1_2_2(bundle_req_valids_0_sva_dfm_1, while_while_for_new_valid_1_sva,
            while_is_request_2_lpi_1_dfm);
        bundle_req_valids_1_lpi_1 := MUX_s_1_2_2(bundle_req_valids_1_lpi_1_dfm_2,
            while_while_for_new_valid_sva, while_is_request_2_lpi_1_dfm);
        bundle_req_addr_1_lpi_1 := bundle_req_addr_1_lpi_1_dfm_1;
        bundle_req_data_1_lpi_1 := bundle_req_data_1_lpi_1_dfm_1;
        while_while_for_mux_nl := MUX_s_1_2_2(bundle_resp_valids_0_lpi_1_dfm, crossbar_data32_t_2U_2U_for_land_1_lpi_1_dfm,
            while_while_for_land_1_lpi_1_dfm);
        bundle_resp_valids_0_lpi_1 := MUX_s_1_2_2(bundle_resp_valids_0_lpi_1_dfm,
            while_while_for_mux_nl, while_is_request_2_lpi_1_dfm);
        while_while_for_mux_2_nl := MUX_s_1_2_2(bundle_resp_valids_1_lpi_1_dfm, crossbar_data32_t_2U_2U_for_land_lpi_1_dfm,
            while_while_for_land_lpi_1_dfm);
        bundle_resp_valids_1_lpi_1 := MUX_s_1_2_2(bundle_resp_valids_1_lpi_1_dfm,
            while_while_for_mux_2_nl, while_is_request_2_lpi_1_dfm);
        bundle_resp_data_0_sva := MUX_v_32_2_2(bundle_resp_data_0_sva, bundle_resp_data_0_sva_dfm,
            while_is_request_2_lpi_1_dfm);
        bundle_resp_data_1_sva := MUX_v_32_2_2(bundle_resp_data_1_sva, bundle_resp_data_1_sva_dfm,
            while_is_request_2_lpi_1_dfm);
        while_else_mux_4_nl := MUX_s_1_2_2((stored_req_type_val_sva), while_else_req_from_port_02_type_val_sva,
            while_else_got_req_01_sva);
        while_mux_5_nl := MUX_s_1_2_2(while_else_mux_4_nl, (stored_req_type_val_sva),
            stored_req_valid_sva);
        while_while_mux_7_nl := MUX_s_1_2_2((stored_req_type_val_sva), while_mux_5_nl,
            exitL_exit_while_while_sva);
        stored_req_type_val_sva := while_while_mux_7_nl;
        while_while_and_nl := while_else_got_req_01_sva AND (NOT (stored_req_valid_sva));
        while_while_mux_8_nl := MUX_s_1_2_2((stored_req_valid_sva), while_while_and_nl,
            exitL_exit_while_while_sva);
        stored_req_valid_sva := while_while_mux_8_nl;
        while_else_req_from_port_01_addr_lpi_1 := while_else_req_from_port_01_addr_lpi_1_dfm_1;
        while_else_req_from_port_01_data_lpi_1 := while_else_req_from_port_01_data_lpi_1_dfm_1;
        while_else_if_2_while_else_if_2_asn_lpi_1 := MUX_s_1_2_2(while_else_if_2_while_else_if_2_asn_lpi_1,
            while_else_if_2_while_else_if_2_asn_lpi_1_dfm_1, exitL_exit_while_while_sva);
        while_else_if_2_while_else_if_2_asn_2_lpi_1 := MUX_v_11_2_2(while_else_if_2_while_else_if_2_asn_2_lpi_1,
            while_else_if_2_while_else_if_2_asn_2_lpi_1_dfm_1, exitL_exit_while_while_sva);
        while_else_if_2_while_else_if_2_asn_4_lpi_1 := MUX_v_32_2_2(while_else_if_2_while_else_if_2_asn_4_lpi_1,
            while_else_if_2_while_else_if_2_asn_4_lpi_1_dfm_1, exitL_exit_while_while_sva);
        while_is_request_2_lpi_1 := (while_while_for_new_valid_1_sva OR while_while_for_new_valid_sva)
            AND while_is_request_2_lpi_1_dfm;
        Arbiter_2U_Roundrobin_pick_if_1_operator_2_false_and_nl := nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_1_lpi_1_dfm
            AND (NOT Arbiter_2U_Roundrobin_pick_priority_2_1_sva);
        Arbiter_2U_Roundrobin_pick_mux_4_nl := MUX_s_1_2_2((scratchpad_request_xbar_arbiters_next_0_1_sva),
            Arbiter_2U_Roundrobin_pick_if_1_operator_2_false_and_nl, scratchpad_request_xbar_xbar_for_3_1_operator_3_false_operator_3_false_operator_3_false_or_svs);
        Arbiter_2U_Roundrobin_pick_mux_8_nl := MUX_s_1_2_2((scratchpad_request_xbar_arbiters_next_0_1_sva),
            Arbiter_2U_Roundrobin_pick_mux_4_nl, Arbiter_2U_Roundrobin_pick_unequal_tmp);
        while_is_request_mux_48_nl := MUX_s_1_2_2((scratchpad_request_xbar_arbiters_next_0_1_sva),
            Arbiter_2U_Roundrobin_pick_mux_8_nl, while_is_request_2_lpi_1_dfm);
        scratchpad_request_xbar_arbiters_next_0_1_sva := while_is_request_mux_48_nl;
        Arbiter_2U_Roundrobin_pick_if_1_operator_2_false_and_1_nl := nvhls_leading_ones_3U_Arbiter_2U_Roundrobin_UnrolledMask_nvhls_nvhls_t_2U_nvuint_t_idx_0_lpi_1_dfm
            AND (NOT Arbiter_2U_Roundrobin_pick_priority_2_sva);
        Arbiter_2U_Roundrobin_pick_mux_15_nl := MUX_s_1_2_2((scratchpad_request_xbar_arbiters_next_1_1_sva),
            Arbiter_2U_Roundrobin_pick_if_1_operator_2_false_and_1_nl, scratchpad_request_xbar_xbar_for_3_2_operator_3_false_operator_3_false_operator_3_false_or_svs);
        Arbiter_2U_Roundrobin_pick_mux_21_nl := MUX_s_1_2_2((scratchpad_request_xbar_arbiters_next_1_1_sva),
            Arbiter_2U_Roundrobin_pick_mux_15_nl, Arbiter_2U_Roundrobin_pick_unequal_tmp_1);
        while_is_request_mux_49_nl := MUX_s_1_2_2((scratchpad_request_xbar_arbiters_next_1_1_sva),
            Arbiter_2U_Roundrobin_pick_mux_21_nl, while_is_request_2_lpi_1_dfm);
        scratchpad_request_xbar_arbiters_next_1_1_sva := while_is_request_mux_49_nl;
        exitL_exit_while_while_sva := (NOT while_is_request_2_lpi_1_dfm);
      END LOOP while_0;

    END LOOP wrapper_rlp;

  END PROCESS wrapper;

  thread_port_01 : PROCESS
    -- Interconnect Declarations
    VARIABLE resp_wrapper_01_Pop_inst_STATE : STD_LOGIC;
    VARIABLE req_wrapper_01_Push_inst_STATE : STD_LOGIC;
    VARIABLE resp_port_01_Push_inst_STATE : STD_LOGIC;
    VARIABLE req_port_01_Pop_inst_STATE : STD_LOGIC;
    VARIABLE while_cur_req_type_val_sva : STD_LOGIC;
    VARIABLE while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_valids_sva
        : STD_LOGIC;
    VARIABLE while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_addr_sva
        : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_data_sva
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_valids_sva
        : STD_LOGIC;
    VARIABLE while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_data_sva
        : STD_LOGIC_VECTOR (31 DOWNTO 0);

  BEGIN
    while_0_1 : LOOP
      -- C-Step 0 of Loop 'while_0_1'
      Connections_InBlocking_req_t_Connections_SYN_PORT_Pop(req_port_01_val, req_port_01_rdy,
          req_port_01_msg, while_cur_req_type_val_sva, while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_valids_sva,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_addr_sva,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_data_sva,
          req_port_01_Pop_inst_STATE, req_port_01_Pop_inst_STATE);
      Connections_Combinational_req_t_Connections_SYN_PORT_Push(req_wrapper_01_val,
          req_wrapper_01_rdy, req_wrapper_01_msg, while_cur_req_type_val_sva, while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_valids_sva,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_addr_sva,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_data_sva,
          req_wrapper_01_Push_inst_STATE, req_wrapper_01_Push_inst_STATE);
      IF ( while_cur_req_type_val_sva = '1' ) THEN
      ELSE
        Connections_Combinational_rsp_t_Connections_SYN_PORT_Pop(resp_wrapper_01_val,
            resp_wrapper_01_rdy, resp_wrapper_01_msg, while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_valids_sva,
            while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_data_sva,
            resp_wrapper_01_Pop_inst_STATE, resp_wrapper_01_Pop_inst_STATE);
        Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push(resp_port_01_val,
            resp_port_01_rdy, resp_port_01_msg, while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_valids_sva,
            while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_data_sva,
            resp_port_01_Push_inst_STATE, resp_port_01_Push_inst_STATE);
      END IF;
    END LOOP while_0_1;

  END PROCESS thread_port_01;

  thread_port_02 : PROCESS
    -- Interconnect Declarations
    VARIABLE resp_wrapper_02_Pop_inst_STATE : STD_LOGIC;
    VARIABLE req_wrapper_02_Push_inst_STATE : STD_LOGIC;
    VARIABLE resp_port_02_Push_inst_STATE : STD_LOGIC;
    VARIABLE req_port_02_Pop_inst_STATE : STD_LOGIC;
    VARIABLE while_cur_req_type_val_sva_1 : STD_LOGIC;
    VARIABLE while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_valids_sva_1
        : STD_LOGIC;
    VARIABLE while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_addr_sva_1
        : STD_LOGIC_VECTOR (10 DOWNTO 0);
    VARIABLE while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_data_sva_1
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_valids_sva_1
        : STD_LOGIC;
    VARIABLE while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_data_sva_1
        : STD_LOGIC_VECTOR (31 DOWNTO 0);

  BEGIN
    while_0_2 : LOOP
      -- C-Step 0 of Loop 'while_0_2'
      Connections_InBlocking_req_t_Connections_SYN_PORT_Pop(req_port_02_val, req_port_02_rdy,
          req_port_02_msg, while_cur_req_type_val_sva_1, while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_valids_sva_1,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_addr_sva_1,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_data_sva_1,
          req_port_02_Pop_inst_STATE, req_port_02_Pop_inst_STATE);
      Connections_Combinational_req_t_Connections_SYN_PORT_Push(req_wrapper_02_val,
          req_wrapper_02_rdy, req_wrapper_02_msg, while_cur_req_type_val_sva_1, while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_valids_sva_1,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_addr_sva_1,
          while_Connections_Combinational_req_t_Connections_SYN_PORT_Push_cur_req_data_sva_1,
          req_wrapper_02_Push_inst_STATE, req_wrapper_02_Push_inst_STATE);
      IF ( while_cur_req_type_val_sva_1 = '1' ) THEN
      ELSE
        Connections_Combinational_rsp_t_Connections_SYN_PORT_Pop(resp_wrapper_02_val,
            resp_wrapper_02_rdy, resp_wrapper_02_msg, while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_valids_sva_1,
            while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_data_sva_1,
            resp_wrapper_02_Pop_inst_STATE, resp_wrapper_02_Pop_inst_STATE);
        Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push(resp_port_02_val,
            resp_port_02_rdy, resp_port_02_msg, while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_valids_sva_1,
            while_if_Connections_OutBlocking_rsp_t_Connections_SYN_PORT_Push_data_sva_1,
            resp_port_02_Push_inst_STATE, resp_port_02_Push_inst_STATE);
      END IF;
    END LOOP while_0_2;

  END PROCESS thread_port_02;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    Dummy
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;


ENTITY Dummy IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    data_in_val : IN STD_LOGIC;
    data_in_rdy : OUT STD_LOGIC;
    data_in_msg : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    data_out_val : OUT STD_LOGIC;
    data_out_rdy : IN STD_LOGIC;
    data_out_msg : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END Dummy;

ARCHITECTURE v1 OF Dummy IS
  -- Default Constants
  CONSTANT DONT_CARE : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL req_port_01_val : STD_LOGIC;
  SIGNAL req_port_01_rdy : STD_LOGIC;
  SIGNAL req_port_01_msg : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL resp_port_01_val : STD_LOGIC;
  SIGNAL resp_port_01_msg : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL req_port_02_val : STD_LOGIC;
  SIGNAL req_port_02_rdy : STD_LOGIC;
  SIGNAL req_port_02_msg : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL resp_port_02_val : STD_LOGIC;
  SIGNAL resp_port_02_rdy : STD_LOGIC;
  SIGNAL resp_port_02_msg : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL handshake_req_req : STD_LOGIC;
  SIGNAL handshake_ack_ack : STD_LOGIC;

  COMPONENT ScratchpadWrapper
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      req_port_01_val : IN STD_LOGIC;
      req_port_01_rdy : OUT STD_LOGIC;
      req_port_01_msg : IN STD_LOGIC_VECTOR (44 DOWNTO 0);
      resp_port_01_val : OUT STD_LOGIC;
      resp_port_01_rdy : IN STD_LOGIC;
      resp_port_01_msg : OUT STD_LOGIC_VECTOR (32 DOWNTO 0);
      req_port_02_val : IN STD_LOGIC;
      req_port_02_rdy : OUT STD_LOGIC;
      req_port_02_msg : IN STD_LOGIC_VECTOR (44 DOWNTO 0);
      resp_port_02_val : OUT STD_LOGIC;
      resp_port_02_rdy : IN STD_LOGIC;
      resp_port_02_msg : OUT STD_LOGIC_VECTOR (32 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL scratchpad_wrapper_req_port_01_msg : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL scratchpad_wrapper_resp_port_01_msg : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL scratchpad_wrapper_req_port_02_msg : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL scratchpad_wrapper_resp_port_02_msg : STD_LOGIC_VECTOR (32 DOWNTO 0);

  FUNCTION minimum(arg1,arg2:INTEGER) RETURN INTEGER IS
  BEGIN
    IF(arg1<arg2)THEN
      RETURN arg1;
    ELSE
      RETURN arg2;
    END IF;
  END;

  FUNCTION maximum(arg1,arg2:INTEGER) RETURN INTEGER IS
  BEGIN
    IF(arg1>arg2)THEN
      RETURN arg1;
    ELSE
      RETURN arg2;
    END IF;
  END;

  FUNCTION READSLICE_4_5(input_val:STD_LOGIC_VECTOR(4 DOWNTO 0);index:INTEGER)
  RETURN STD_LOGIC_VECTOR IS
    CONSTANT min_sat_index:INTEGER:= maximum( index, 0 );
    CONSTANT sat_index:INTEGER:= minimum( min_sat_index, 1);
  BEGIN
    RETURN input_val(sat_index+3 DOWNTO sat_index);
  END;

  FUNCTION READSLICE_5_6(input_val:STD_LOGIC_VECTOR(5 DOWNTO 0);index:INTEGER)
  RETURN STD_LOGIC_VECTOR IS
    CONSTANT min_sat_index:INTEGER:= maximum( index, 0 );
    CONSTANT sat_index:INTEGER:= minimum( min_sat_index, 1);
  BEGIN
    RETURN input_val(sat_index+4 DOWNTO sat_index);
  END;

BEGIN
  scratchpad_wrapper : ScratchpadWrapper
    PORT MAP(
      clk => clk,
      rst => rst,
      req_port_01_val => req_port_01_val,
      req_port_01_rdy => req_port_01_rdy,
      req_port_01_msg => scratchpad_wrapper_req_port_01_msg,
      resp_port_01_val => resp_port_01_val,
      resp_port_01_rdy => '0',
      resp_port_01_msg => scratchpad_wrapper_resp_port_01_msg,
      req_port_02_val => req_port_02_val,
      req_port_02_rdy => req_port_02_rdy,
      req_port_02_msg => scratchpad_wrapper_req_port_02_msg,
      resp_port_02_val => resp_port_02_val,
      resp_port_02_rdy => resp_port_02_rdy,
      resp_port_02_msg => scratchpad_wrapper_resp_port_02_msg
    );
  scratchpad_wrapper_req_port_01_msg <= req_port_01_msg;
  resp_port_01_msg <= scratchpad_wrapper_resp_port_01_msg;
  scratchpad_wrapper_req_port_02_msg <= req_port_02_msg;
  resp_port_02_msg <= scratchpad_wrapper_resp_port_02_msg;

  producer : PROCESS
    -- Interconnect Declarations
    VARIABLE handshake_req_inst_STATE : STD_LOGIC;
    VARIABLE req_port_01_Push_inst_STATE : STD_LOGIC;
    VARIABLE data_in_Pop_inst_STATE : STD_LOGIC;
    VARIABLE PRODUCER_OUTER_LOOP_i_4_0_sva : STD_LOGIC_VECTOR (4 DOWNTO 0);
    VARIABLE PRODUCER_INNER_LOOP_j_5_0_sva : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE PRODUCER_INNER_LOOP_Connections_Combinational_req_t_Connections_SYN_PORT_Push_req_data_sva
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE PRODUCER_INNER_LOOP_j_5_0_sva_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE PRODUCER_OUTER_LOOP_i_4_0_sva_1 : STD_LOGIC_VECTOR (4 DOWNTO 0);

  BEGIN
    producer_rlp : LOOP
      -- C-Step 0 of Loop 'producer_rlp'
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT producer_rlp WHEN ( rst = '0' );
      -- C-Step 1 of Loop 'producer_rlp'
      PRODUCER_OUTER_LOOP_i_4_0_sva := STD_LOGIC_VECTOR'( "00000");
      PRODUCER_OUTER_LOOP : LOOP
        -- C-Step 0 of Loop 'PRODUCER_OUTER_LOOP'
        PRODUCER_INNER_LOOP_j_5_0_sva := STD_LOGIC_VECTOR'( "000000");
        PRODUCER_INNER_LOOP : LOOP
          -- C-Step 0 of Loop 'PRODUCER_INNER_LOOP'
          Connections_InBlocking_data32_t_Connections_SYN_PORT_Pop(data_in_val, data_in_rdy,
              data_in_msg, PRODUCER_INNER_LOOP_Connections_Combinational_req_t_Connections_SYN_PORT_Push_req_data_sva,
              data_in_Pop_inst_STATE, data_in_Pop_inst_STATE);
          Connections_Combinational_req_t_Connections_SYN_PORT_Push(req_port_01_val,
              req_port_01_rdy, req_port_01_msg, '1', '1', STD_LOGIC_VECTOR'( "00")
              & (READSLICE_4_5(PRODUCER_OUTER_LOOP_i_4_0_sva, 0)) & (READSLICE_5_6(PRODUCER_INNER_LOOP_j_5_0_sva,
              0)), PRODUCER_INNER_LOOP_Connections_Combinational_req_t_Connections_SYN_PORT_Push_req_data_sva,
              req_port_01_Push_inst_STATE, req_port_01_Push_inst_STATE);
          PRODUCER_INNER_LOOP_j_5_0_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(READSLICE_5_6(PRODUCER_INNER_LOOP_j_5_0_sva,
              0)), 5), 6) + UNSIGNED'( "000001"), 6));
          EXIT PRODUCER_INNER_LOOP WHEN ( (PRODUCER_INNER_LOOP_j_5_0_sva_1(5)) =
              '1' );
          PRODUCER_INNER_LOOP_j_5_0_sva := PRODUCER_INNER_LOOP_j_5_0_sva_1;
        END LOOP PRODUCER_INNER_LOOP;

        handshake_t_req(handshake_req_req, handshake_ack_ack, handshake_req_inst_STATE,
            handshake_req_inst_STATE);
        PRODUCER_OUTER_LOOP_i_4_0_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(READSLICE_4_5(PRODUCER_OUTER_LOOP_i_4_0_sva,
            0)), 4), 5) + UNSIGNED'( "00001"), 5));
        EXIT PRODUCER_OUTER_LOOP WHEN ( (PRODUCER_OUTER_LOOP_i_4_0_sva_1(4)) = '1'
            );
        PRODUCER_OUTER_LOOP_i_4_0_sva := PRODUCER_OUTER_LOOP_i_4_0_sva_1;
      END LOOP PRODUCER_OUTER_LOOP;

      PRODUCER_DONE : LOOP
        -- C-Step 0 of Loop 'PRODUCER_DONE'
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT producer_rlp WHEN ( rst = '0' );
        -- C-Step 1 of Loop 'PRODUCER_DONE'
      END LOOP PRODUCER_DONE;

    END LOOP producer_rlp;

  END PROCESS producer;

  consumer : PROCESS
    -- Interconnect Declarations
    VARIABLE data_out_Push_inst_STATE : STD_LOGIC;
    VARIABLE resp_port_02_Pop_inst_STATE : STD_LOGIC;
    VARIABLE handshake_ack_inst_STATE : STD_LOGIC;
    VARIABLE req_port_02_Push_inst_STATE : STD_LOGIC;
    VARIABLE CONSUMER_OUTER_LOOP_i_4_0_sva : STD_LOGIC_VECTOR (4 DOWNTO 0);
    VARIABLE CONSUMER_INNER_LOOP_j_5_0_sva : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE CONSUMER_INNER_LOOP_resp_Connections_Combinational_rsp_t_Connections_SYN_PORT_Pop_return_sva
        : STD_LOGIC;
    VARIABLE CONSUMER_INNER_LOOP_Connections_OutBlocking_data32_t_Connections_SYN_PORT_Push_data_sva
        : STD_LOGIC_VECTOR (31 DOWNTO 0);
    VARIABLE CONSUMER_INNER_LOOP_j_5_0_sva_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
    VARIABLE CONSUMER_OUTER_LOOP_i_4_0_sva_1 : STD_LOGIC_VECTOR (4 DOWNTO 0);

  BEGIN
    consumer_rlp : LOOP
      -- C-Step 0 of Loop 'consumer_rlp'
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT consumer_rlp WHEN ( rst = '0' );
      -- C-Step 1 of Loop 'consumer_rlp'
      CONSUMER_OUTER_LOOP_i_4_0_sva := STD_LOGIC_VECTOR'( "00000");
      CONSUMER_OUTER_LOOP : LOOP
        -- C-Step 0 of Loop 'CONSUMER_OUTER_LOOP'
        handshake_t_ack(handshake_req_req, handshake_ack_ack, handshake_ack_inst_STATE,
            handshake_ack_inst_STATE);
        CONSUMER_INNER_LOOP_j_5_0_sva := STD_LOGIC_VECTOR'( "000000");
        CONSUMER_INNER_LOOP : LOOP
          -- C-Step 0 of Loop 'CONSUMER_INNER_LOOP'
          Connections_Combinational_req_t_Connections_SYN_PORT_Push(req_port_02_val,
              req_port_02_rdy, req_port_02_msg, '0', '1', STD_LOGIC_VECTOR'( "00")
              & (READSLICE_4_5(CONSUMER_OUTER_LOOP_i_4_0_sva, 0)) & (READSLICE_5_6(CONSUMER_INNER_LOOP_j_5_0_sva,
              0)), STD_LOGIC_VECTOR'( "11011110101011011011111011101111"), req_port_02_Push_inst_STATE,
              req_port_02_Push_inst_STATE);
          Connections_Combinational_rsp_t_Connections_SYN_PORT_Pop(resp_port_02_val,
              resp_port_02_rdy, resp_port_02_msg, CONSUMER_INNER_LOOP_resp_Connections_Combinational_rsp_t_Connections_SYN_PORT_Pop_return_sva,
              CONSUMER_INNER_LOOP_Connections_OutBlocking_data32_t_Connections_SYN_PORT_Push_data_sva,
              resp_port_02_Pop_inst_STATE, resp_port_02_Pop_inst_STATE);
          Connections_OutBlocking_data32_t_Connections_SYN_PORT_Push(data_out_val,
              data_out_rdy, data_out_msg, CONSUMER_INNER_LOOP_Connections_OutBlocking_data32_t_Connections_SYN_PORT_Push_data_sva,
              data_out_Push_inst_STATE, data_out_Push_inst_STATE);
          CONSUMER_INNER_LOOP_j_5_0_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(READSLICE_5_6(CONSUMER_INNER_LOOP_j_5_0_sva,
              0)), 5), 6) + UNSIGNED'( "000001"), 6));
          EXIT CONSUMER_INNER_LOOP WHEN ( (CONSUMER_INNER_LOOP_j_5_0_sva_1(5)) =
              '1' );
          CONSUMER_INNER_LOOP_j_5_0_sva := CONSUMER_INNER_LOOP_j_5_0_sva_1;
        END LOOP CONSUMER_INNER_LOOP;

        CONSUMER_OUTER_LOOP_i_4_0_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(READSLICE_4_5(CONSUMER_OUTER_LOOP_i_4_0_sva,
            0)), 4), 5) + UNSIGNED'( "00001"), 5));
        EXIT CONSUMER_OUTER_LOOP WHEN ( (CONSUMER_OUTER_LOOP_i_4_0_sva_1(4)) = '1'
            );
        CONSUMER_OUTER_LOOP_i_4_0_sva := CONSUMER_OUTER_LOOP_i_4_0_sva_1;
      END LOOP CONSUMER_OUTER_LOOP;

      CONSUMER_DONE : LOOP
        -- C-Step 0 of Loop 'CONSUMER_DONE'
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT consumer_rlp WHEN ( rst = '0' );
        -- C-Step 1 of Loop 'CONSUMER_DONE'
      END LOOP CONSUMER_DONE;

    END LOOP consumer_rlp;

  END PROCESS consumer;

END v1;



